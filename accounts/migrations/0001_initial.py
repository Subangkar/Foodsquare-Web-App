# Generated by Django 2.2.1 on 2019-07-18 10:44

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_customer', models.BooleanField(default=False, verbose_name='Customer Account')),
                ('is_manager', models.BooleanField(default=False, verbose_name='Manager Account')),
                ('is_branch_manager', models.BooleanField(default=False, verbose_name='Branch Manager Account')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Delivery',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.CharField(max_length=50, verbose_name='Delivery Address Description')),
                ('address_desc', models.CharField(max_length=50, verbose_name='Delivery Address Description')),
                ('charge', models.FloatField(verbose_name='Delivery Fees')),
                ('time', models.DateTimeField(verbose_name='Delivery Completion Time')),
                ('rating_user', models.IntegerField(verbose_name='User Rating')),
                ('rating_deliveryman', models.IntegerField(verbose_name='Delivery Man Rating')),
            ],
            options={
                'verbose_name': 'Delivery',
                'verbose_name_plural': 'Deliveries',
            },
        ),
        migrations.CreateModel(
            name='DeliveryMan',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Name')),
                ('contactNum', models.CharField(max_length=15, verbose_name='Phone Number')),
                ('address', models.CharField(max_length=50, verbose_name='Permanent Address')),
                ('nid', models.CharField(max_length=50, verbose_name='National ID No.')),
            ],
            options={
                'verbose_name': 'DeliveryMan',
                'verbose_name_plural': 'DeliveryMen',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateTimeField(auto_now=True, verbose_name='Order Place Time')),
                ('mobileNo', models.CharField(default='0', max_length=15, verbose_name='Mobile Number')),
                ('status', models.CharField(default='Pending', max_length=15, verbose_name='Order Status')),
            ],
            options={
                'verbose_name': 'Order',
                'verbose_name_plural': 'Orders',
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.FloatField(verbose_name='Total Price')),
                ('payment_type', models.CharField(choices=[('C', 'Cash'), ('O', 'Online')], default='C', max_length=1, verbose_name='Payment Type')),
            ],
            options={
                'verbose_name': 'Payment',
                'verbose_name_plural': 'Payments',
            },
        ),
        migrations.CreateModel(
            name='Restaurant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('restaurant_name', models.CharField(max_length=50)),
                ('restaurant_key', models.CharField(default='0', max_length=250)),
                ('trade_license', models.CharField(max_length=50, unique=True)),
                ('restaurantImg', models.ImageField(default='restaurant_img/default.png', upload_to='restaurant_img/')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Restaurant',
                'verbose_name_plural': 'Restaurants',
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=20, null=True)),
                ('last_name', models.CharField(max_length=20, null=True)),
                ('address', models.TextField(max_length=150, null=True)),
                ('avatar', models.ImageField(default='avatars/default.png', upload_to='avatars/')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='RestaurantBranch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('branch_name', models.CharField(max_length=50)),
                ('branch_location', models.CharField(default='0,0', max_length=50, verbose_name='Openstreetmap co-ordinates')),
                ('branch_location_details', models.CharField(default='', max_length=100, verbose_name="If co-ordinates can't be provided or floor-no")),
                ('location_area', models.CharField(default='', max_length=50)),
                ('branch_phonenum', models.CharField(default='', max_length=20)),
                ('branch_mobilenum', models.CharField(default='', max_length=20)),
                ('branch_email', models.CharField(default='', max_length=50)),
                ('running', models.BooleanField(default=False)),
                ('opening_time', models.FloatField(default=9.0, verbose_name='Opening Time in 24h format')),
                ('closing_time', models.FloatField(default=23.0, verbose_name='Opening Time in 24h format')),
                ('restaurant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.Restaurant')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Branch',
                'verbose_name_plural': 'Branches',
            },
        ),
        migrations.CreateModel(
            name='OrderPackageList',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.Order', verbose_name='Order')),
            ],
            options={
                'verbose_name': 'OrderPackageList',
                'verbose_name_plural': 'OrderPackageLists',
            },
        ),
    ]
